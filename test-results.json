{
  "timestamp": "2025-10-03T13:08:13.738Z",
  "duration": 25,
  "summary": {
    "total": 4,
    "successful": 1,
    "failed": 3,
    "errors": 0,
    "successRate": 25
  },
  "results": [
    {
      "suite": "Sistema de Tests B√°sicos",
      "status": "failed",
      "duration": 1385,
      "error": "Command failed: node \"/Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/scripts/test-system.js\"",
      "exitCode": 1,
      "output": "\u001b[1müöÄ INICIANDO SISTEMA DE TESTING COMPLETO\u001b[0m\n\u001b[36müìÅ Directorio del proyecto: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront\u001b[0m\n\u001b[36m‚è∞ Iniciado: 10/3/2025, 3:07:49 PM\u001b[0m\n\u001b[1m\nüîç VERIFICANDO ARCHIVOS DE CONFIGURACI√ìN\u001b[0m\n\u001b[32m‚úÖ Archivo .env.example (Frontend)\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/.env.example\u001b[0m\n\u001b[32m‚úÖ Archivo .env.production.example\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/.env.production.example\u001b[0m\n\u001b[32m‚úÖ Archivo .env.example (Backend)\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/backend/.env.example\u001b[0m\n\u001b[32m‚úÖ Archivo terraform.tfvars.example\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/terraform.tfvars.example\u001b[0m\n\u001b[32m‚úÖ Seguridad: .env no en repo\u001b[0m\n\u001b[36m   Archivo .env no encontrado (correcto)\u001b[0m\n\u001b[33m‚ö†Ô∏è Seguridad: .env.production no en repo\u001b[0m\n\u001b[36m   ADVERTENCIA: Archivo .env encontrado\u001b[0m\n\u001b[33m‚ö†Ô∏è Seguridad: .env no en repo\u001b[0m\n\u001b[36m   ADVERTENCIA: Archivo .env encontrado\u001b[0m\n\u001b[1m\nüì¶ VERIFICANDO DEPENDENCIAS\u001b[0m\n\u001b[32m‚úÖ package.json Frontend\u001b[0m\n\u001b[36m   Nombre: waveresearch-interface, Versi√≥n: 0.0.0\u001b[0m\n\u001b[32m‚úÖ Dependencia react\u001b[0m\n\u001b[36m   Versi√≥n: ^18.3.1\u001b[0m\n\u001b[32m‚úÖ Dependencia vite\u001b[0m\n\u001b[36m   Versi√≥n: ^5.4.20\u001b[0m\n\u001b[32m‚úÖ Dependencia axios\u001b[0m\n\u001b[36m   Versi√≥n: ^1.12.2\u001b[0m\n\u001b[32m‚úÖ package.json Backend\u001b[0m\n\u001b[36m   Nombre: waveresearch-backend, Versi√≥n: 1.0.0\u001b[0m\n\u001b[1m\nüîí VERIFICANDO SEGURIDAD\u001b[0m\n\u001b[32m‚úÖ Gitignore .env\u001b[0m\n\u001b[36m   .env est√° en .gitignore\u001b[0m\n\u001b[32m‚úÖ Gitignore node_modules\u001b[0m\n\u001b[36m   node_modules est√° en .gitignore\u001b[0m\n\u001b[33m‚ö†Ô∏è Credenciales Hardcodeadas\u001b[0m\n\u001b[36m   Posibles credenciales encontradas en c√≥digo\u001b[0m\n\u001b[33m   src/types/index.js: * @property {string} N8N_API_KEY - API Key de n8n\nsrc/contexts/AuthContext.jsx:            existingSession.access_token\nsrc/contexts/AuthContext.jsx:  const login = async (email, password, rememberMe = false) => {\nsrc/contexts/AuthContext.jsx:      const result = await signIn(email, password, rememberMe);\nsrc/contexts/AuthContext.jsx:          result.session.access_token\nsrc/contexts/AuthContext.jsx:            result.session.access_token\nsrc/contexts/AuthContext.jsx:      access_token: 'dev-token-123',\nsrc/config/constants.js:  // API_KEY, WEBHOOK_URL y BASIC_AUTH removidos del frontend por seguridad\nsrc/config/constants.js:  PASSWORD: {\nsrc/config/constants.js:      parseInt(import.meta.env.VITE_VALIDATION_PASSWORD_MIN_LENGTH) || 8,\nsrc/config/constants.js:// NOTA: API_KEY removida del frontend por seguridad - se maneja en el backend\nsrc/config/constants.js:    // API_KEY removida del frontend por seguridad\nsrc/config/constants.js:    MAX_TOKENS: 1000,\nsrc/constants/formConstants.js:  password: {\nsrc/constants/formConstants.js:  confirmPassword: {\nsrc/constants/formConstants.js:  WEAK_PASSWORD: 'La contrase√±a es muy d√©bil',\nsrc/utils/metadataExtractor.js:    'password',\nsrc/docs/UI_METADATA_FORMAT.md:  \"name\": \"password\",\nsrc/docs/UI_METADATA_FORMAT.md:  \"type\": \"password\",\nsrc/components/forms/DynamicFormField.jsx:        // text, email, tel, url, password, number, date, datetime-local, time\nsrc/components/forms/FormInput.jsx: * @param {string} props.type - Tipo de input (text, email, password, etc.)\nsrc/components/auth/RegisterForm.jsx:    password: '',\nsrc/components/auth/RegisterForm.jsx:    confirmPassword: '',\nsrc/components/auth/RegisterForm.jsx:        password: formData.password,\nsrc/components/auth/RegisterForm.jsx:          name=\"password\"\nsrc/components/auth/RegisterForm.jsx:          type=\"password\"\nsrc/components/auth/RegisterForm.jsx:          value={formData.password}\nsrc/components/auth/RegisterForm.jsx:          error={errors.password}\nsrc/components/auth/RegisterForm.jsx:          name=\"confirmPassword\"\nsrc/components/auth/RegisterForm.jsx:          type=\"password\"\nsrc/components/auth/RegisterForm.jsx:          value={formData.confirmPassword}\nsrc/components/auth/RegisterForm.jsx:          error={errors.confirmPassword}\nsrc/components/auth/LoginForm.jsx:    password: '',\nsrc/components/auth/LoginForm.jsx:        formData.password,\nsrc/components/auth/LoginForm.jsx:          name=\"password\"\nsrc/components/auth/LoginForm.jsx:          type=\"password\"\nsrc/components/auth/LoginForm.jsx:          value={formData.password}\nsrc/components/auth/LoginForm.jsx:          error={errors.password}\nsrc/hooks/useFormValidation.js:      if (fieldName === 'confirmPassword' && value !== allValues.password) {\nsrc/hooks/useErrorHandler.js:        case 'weak_password':\nsrc/hooks/useErrorHandler.js:          return ERROR_MESSAGES.WEAK_PASSWORD;\nsrc/pages/EmailConfirmationPage.jsx:      // Obtener el token de confirmaci√≥n de la URL\nsrc/pages/EmailConfirmationPage.jsx:      const token = searchParams.get('token') || searchParams.get('token_hash');\nsrc/pages/EmailConfirmationPage.jsx:      if (!token) {\nsrc/pages/EmailConfirmationPage.jsx:        setMessage('Token de confirmaci√≥n no encontrado en la URL.');\nsrc/pages/EmailConfirmationPage.jsx:        const result = await confirmEmail(token);\nsrc/services/supabaseService.js:          autoRefreshToken: true,\nsrc/services/emailConfirmationService.js: * Confirma el email del usuario usando el token de confirmaci√≥n\nsrc/services/emailConfirmationService.js: * @param {string} token - Token de confirmaci√≥n del email\nsrc/services/emailConfirmationService.js:export const confirmEmail = async token => {\nsrc/services/emailConfirmationService.js:      token_hash: token,\nsrc/services/authService.js:    const { email, password, fullName, companyName, companyType, sector } =\nsrc/services/authService.js:      password,\nsrc/services/authService.js:export const signIn = async (email, password, rememberMe = false) => {\nsrc/services/authService.js:      .auth.signInWithPassword({\nsrc/services/authService.js:        password,\nsrc/services/authService.js:export const loadUserProfile = async (userId, accessToken) => {\nsrc/services/authService.js:    if (!userId || !accessToken) {\nsrc/services/authService.js:      throw new Error('ID de usuario y token de acceso requeridos');\nsrc/services/authService.js:          Authorization: `Bearer ${accessToken}`,\nsrc/services/authService.js:        return await createUserProfile(userId, accessToken);\nsrc/services/authService.js:export const createUserProfile = async (userId, accessToken, userData = {}) => {\nsrc/services/authService.js:          Authorization: `Bearer ${accessToken}`,\nsrc/services/authService.js:export const updateProfile = async (userId, accessToken, updates) => {\nsrc/services/authService.js:          Authorization: `Bearer ${accessToken}`,\nsrc/services/authService.js: * Refresca el token de acceso\nsrc/services/authService.js:export const refreshToken = async refreshTokenValue => {\nsrc/services/authService.js:        refresh_token: refreshTokenValue,\nsrc/services/authService.js:    console.error('Error refrescando token:', error);\nsrc/services/authService.js:    access_token: authData.session.access_token,\nsrc/services/authService.js:    refresh_token: authData.session.refresh_token,\nsrc/services/authService.js:  refreshToken,\n\u001b[0m\n\u001b[1m\nüèóÔ∏è VERIFICANDO INFRAESTRUCTURA\u001b[0m\n\u001b[32m‚úÖ Archivo Terraform backend_ecs.tf\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/backend_ecs.tf\u001b[0m\n\u001b[32m‚úÖ Archivo Terraform frontend_s3.tf\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/frontend_s3.tf\u001b[0m\n\u001b[32m‚úÖ Archivo Terraform ecr.tf\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/ecr.tf\u001b[0m\n\u001b[32m‚úÖ Archivo Terraform iam.tf\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/iam.tf\u001b[0m\n\u001b[32m‚úÖ Archivo Terraform provider.tf\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/provider.tf\u001b[0m\n\u001b[32m‚úÖ Archivo Docker Compose\u001b[0m\n\u001b[36m   Encontrado: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/docker-compose.yml\u001b[0m\n\u001b[1m\nüè• VERIFICANDO SALUD DEL BACKEND\u001b[0m\n\u001b[32m‚úÖ Backend Health Check\u001b[0m\n\u001b[36m   Status: OK, Uptime: 2296s\u001b[0m\n\u001b[32m‚úÖ Backend Environment\u001b[0m\n\u001b[36m   Environment: development\u001b[0m\n\u001b[32m‚úÖ Backend Port\u001b[0m\n\u001b[36m   Puerto: 3000\u001b[0m\n\u001b[1m\nüîó VERIFICANDO ENDPOINTS DEL BACKEND\u001b[0m\n\u001b[32m‚úÖ Endpoint /health\u001b[0m\n\u001b[36m   HTTP 200 (esperado: 200)\u001b[0m\n\u001b[32m‚úÖ Endpoint /api/n8n/workflows\u001b[0m\n\u001b[36m   HTTP 500 (esperado: 200 o 401 o 500)\u001b[0m\n\u001b[31m‚ùå Endpoint /api/supabase/test\u001b[0m\n\u001b[36m   HTTP 404 (esperado: 200 o 401 o 500)\u001b[0m\n\u001b[1m\nüèóÔ∏è VERIFICANDO BUILD DEL FRONTEND\u001b[0m\n\u001b[32m‚úÖ Dependencias Frontend\u001b[0m\n\u001b[36m   node_modules encontrado\u001b[0m\n\u001b[36m   Ejecutando build del frontend...\u001b[0m\n\u001b[32m‚úÖ Frontend Build\u001b[0m\n\u001b[36m   Build exitoso, carpeta dist creada\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[1müìä RESUMEN DE PRUEBAS\u001b[0m\n\u001b[1m============================================================\u001b[0m\n\u001b[32m‚úÖ Pruebas exitosas: 25\u001b[0m\n\u001b[31m‚ùå Pruebas fallidas: 1\u001b[0m\n\u001b[33m‚ö†Ô∏è  Advertencias: 3\u001b[0m\n\u001b[36m‚è±Ô∏è  Duraci√≥n: 1s\u001b[0m\n\u001b[32müìà Tasa de √©xito: 86%\u001b[0m\n\u001b[31m\n‚ùå PRUEBAS FALLIDAS:\u001b[0m\n\u001b[31m   ‚Ä¢ Endpoint /api/supabase/test: HTTP 404 (esperado: 200 o 401 o 500)\u001b[0m\n\u001b[33m\n‚ö†Ô∏è  ADVERTENCIAS:\u001b[0m\n\u001b[33m   ‚Ä¢ Seguridad: .env.production no en repo: ADVERTENCIA: Archivo .env encontrado\u001b[0m\n\u001b[33m   ‚Ä¢ Seguridad: .env no en repo: ADVERTENCIA: Archivo .env encontrado\u001b[0m\n\u001b[33m   ‚Ä¢ Credenciales Hardcodeadas: Posibles credenciales encontradas en c√≥digo\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[36müìÑ Reporte guardado en: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/test-report.json\u001b[0m\n\u001b[31m\nüí• ALGUNOS TESTS FALLARON\u001b[0m\n"
    },
    {
      "suite": "Health Checks Avanzados",
      "status": "success",
      "duration": 8176,
      "output": "TP 404 (esperado: 200|401|500)\u001b[0m\n\u001b[33m   ‚Ä¢ N8N Service: Error: Request failed with status code 500\u001b[0m\n\u001b[33m   ‚Ä¢ Supabase Service: Error: Request failed with status code 404\u001b[0m\n\u001b[33m   ‚Ä¢ Proxy Configuration: Proxy no encontrado en vite.config.js\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[36müìÑ Reporte guardado en: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/health-report.json\u001b[0m\n\u001b[32m\nüéâ ¬°TODOS LOS SERVICIOS EST√ÅN SALUDABLES!\u001b[0m\n"
    },
    {
      "suite": "Tests de Integraci√≥n",
      "status": "failed",
      "duration": 6139,
      "error": "Command failed: node \"/Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/scripts/integration-tests.js\"",
      "exitCode": 1,
      "output": "\u001b[1müîó INICIANDO TESTS DE INTEGRACI√ìN\u001b[0m\n\u001b[36m‚è∞ Iniciado: 10/3/2025, 3:08:00 PM\u001b[0m\n\u001b[1m\nüîß TESTING BACKEND BASIC FUNCTIONALITY\u001b[0m\n\u001b[32m‚úÖ Backend Health Check (11ms) - Status: OK, Uptime: 2308s\u001b[0m\n\u001b[33m‚ö†Ô∏è CORS Configuration - CORS headers missing\u001b[0m\n\u001b[1m\nüîÑ TESTING N8N INTEGRATION\u001b[0m\n\u001b[33m   Reintento 1/2 para N8N Workflows...\u001b[0m\n\u001b[31m‚ùå N8N Integration - Error: Request failed with status code 500\u001b[0m\n\u001b[1m\nüóÑÔ∏è TESTING SUPABASE INTEGRATION\u001b[0m\n\u001b[33m   Reintento 1/2 para Supabase Connection...\u001b[0m\n\u001b[31m‚ùå Supabase Integration - Error: Request failed with status code 404\u001b[0m\n\u001b[1m\nüåê TESTING FRONTEND-BACKEND COMMUNICATION\u001b[0m\n\u001b[31m‚ùå Vite Proxy Configuration - Proxy no configurado\u001b[0m\n\u001b[32m‚úÖ API Endpoint /api/n8n/workflows - HTTP 500 (accesible)\u001b[0m\n\u001b[31m‚ùå API Endpoint /api/supabase/test - Endpoint no encontrado (404)\u001b[0m\n\u001b[32m‚úÖ API Endpoint /health - HTTP 200 (accesible)\u001b[0m\n\u001b[31m‚ùå Environment Variables Security - Variables sensibles encontradas en frontend\u001b[0m\n\u001b[1m\nüîÑ TESTING END-TO-END WORKFLOW\u001b[0m\n\u001b[33m‚ö†Ô∏è End-to-End Workflow - Endpoint de workflow no implementado (normal en desarrollo)\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[1müìä INTEGRATION TEST REPORT\u001b[0m\n\u001b[1m============================================================\u001b[0m\n\u001b[32m‚úÖ Tests exitosos: 3\u001b[0m\n\u001b[31m‚ùå Tests fallidos: 5\u001b[0m\n\u001b[33m‚ö†Ô∏è  Advertencias: 2\u001b[0m\n\u001b[31müìà Tasa de √©xito: 30%\u001b[0m\n\u001b[36m‚è±Ô∏è  Duraci√≥n: 6s\u001b[0m\n\u001b[31m\n‚ùå TESTS FALLIDOS:\u001b[0m\n\u001b[31m   ‚Ä¢ N8N Integration: Error: Request failed with status code 500\u001b[0m\n\u001b[31m   ‚Ä¢ Supabase Integration: Error: Request failed with status code 404\u001b[0m\n\u001b[31m   ‚Ä¢ Vite Proxy Configuration: Proxy no configurado\u001b[0m\n\u001b[31m   ‚Ä¢ API Endpoint /api/supabase/test: Endpoint no encontrado (404)\u001b[0m\n\u001b[31m   ‚Ä¢ Environment Variables Security: Variables sensibles encontradas en frontend\u001b[0m\n\u001b[33m\n‚ö†Ô∏è  ADVERTENCIAS:\u001b[0m\n\u001b[33m   ‚Ä¢ CORS Configuration: CORS headers missing\u001b[0m\n\u001b[33m   ‚Ä¢ End-to-End Workflow: Endpoint de workflow no implementado (normal en desarrollo)\u001b[0m\n\u001b[36m\n‚ö° ESTAD√çSTICAS DE RENDIMIENTO:\u001b[0m\n\u001b[36m   ‚Ä¢ Tiempo promedio: 11ms\u001b[0m\n\u001b[36m   ‚Ä¢ Test m√°s lento: Backend Health Check (11ms)\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[36müìÑ Reporte detallado guardado en: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/integration-test-report.json\u001b[0m\n\u001b[31m\nüí• PROBLEMAS CR√çTICOS EN INTEGRACI√ìN\u001b[0m\n"
    },
    {
      "suite": "Validaci√≥n de Despliegue",
      "status": "failed",
      "duration": 4888,
      "error": "Command failed: node \"/Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/scripts/deployment-validator.js\"\ngrep: backend/src/: No such file or directory\n",
      "exitCode": 1,
      "output": "\u001b[1müîç INICIANDO VALIDACI√ìN DE DESPLIEGUE\u001b[0m\n\u001b[36m‚è∞ Iniciado: 10/3/2025, 3:08:07 PM\u001b[0m\n\u001b[1m\nüìÅ VALIDANDO ARCHIVOS DE CONFIGURACI√ìN\u001b[0m\n\u001b[32m‚úÖ Frontend .env.example - Variables requeridas presentes\u001b[0m\n\u001b[32m‚úÖ Frontend .env.production.example - Variables requeridas presentes\u001b[0m\n\u001b[32m‚úÖ Backend .env.example - Variables requeridas presentes\u001b[0m\n\u001b[32m‚úÖ .env not in repo - Archivo .env no est√° en repositorio\u001b[0m\n\u001b[31m‚ùå .env.production not in repo - PELIGRO: Archivo .env en repositorio\u001b[0m\n\u001b[36m   üí° Eliminar archivo .env del repositorio y agregarlo a .gitignore\u001b[0m\n\u001b[31m‚ùå .env not in repo - PELIGRO: Archivo .env en repositorio\u001b[0m\n\u001b[36m   üí° Eliminar archivo .env del repositorio y agregarlo a .gitignore\u001b[0m\n\u001b[1m\nüèóÔ∏è VALIDANDO CONFIGURACI√ìN DE TERRAFORM\u001b[0m\n\u001b[32m‚úÖ provider.tf - Archivo encontrado\u001b[0m\n\u001b[32m‚úÖ backend_ecs.tf - Archivo encontrado\u001b[0m\n\u001b[32m‚úÖ frontend_s3.tf - Archivo encontrado\u001b[0m\n\u001b[32m‚úÖ ecr.tf - Archivo encontrado\u001b[0m\n\u001b[32m‚úÖ iam.tf - Archivo encontrado\u001b[0m\n\u001b[32m‚úÖ outputs.tf - Archivo encontrado\u001b[0m\n\u001b[33m‚ö†Ô∏è terraform.tfvars.example - Algunas variables pueden faltar\u001b[0m\n\u001b[36m   üí° Verificar que todas las variables de terraform.tfvars.example est√©n definidas\u001b[0m\n\u001b[32m‚úÖ terraform.tfvars - Archivo de variables listo\u001b[0m\n\u001b[32m‚úÖ Syntax Check - Sintaxis de Terraform v√°lida\u001b[0m\n\u001b[1m\nüê≥ VALIDANDO CONFIGURACI√ìN DE DOCKER\u001b[0m\n\u001b[32m‚úÖ docker-compose.yml - LocalStack: true, Ports: true, Services: true\u001b[0m\n\u001b[32m‚úÖ Docker Engine - Docker disponible\u001b[0m\n\u001b[32m‚úÖ Docker Compose - Docker Compose disponible\u001b[0m\n\u001b[1m\nüèóÔ∏è VALIDANDO BUILD DE LA APLICACI√ìN\u001b[0m\n\u001b[32m‚úÖ Package Scripts - Dev: true, Build: true, Preview: true\u001b[0m\n\u001b[32m‚úÖ Critical Dependencies - Todas las dependencias cr√≠ticas presentes\u001b[0m\n\u001b[32m‚úÖ Package Scripts - Start: true, Dev: true\u001b[0m\n\u001b[36m   Ejecutando build de prueba...\u001b[0m\n\u001b[32m‚úÖ Build Test - Build exitoso\u001b[0m\n\u001b[1m\nüöÄ VALIDANDO PREPARACI√ìN PARA LOCALSTACK\u001b[0m\n\u001b[32m‚úÖ Service Health - 5 servicios activos: ec2, iam, s3, sqs, sts\u001b[0m\n\u001b[33m‚ö†Ô∏è Required Services - 2/4 servicios requeridos disponibles\u001b[0m\n\u001b[36m   üí° Verificar configuraci√≥n de servicios en docker-compose.yml\u001b[0m\n\u001b[1m\n‚òÅÔ∏è VALIDANDO PREPARACI√ìN PARA AWS\u001b[0m\n\u001b[32m‚úÖ AWS CLI - Instalado: aws-cli/2.31.6 Python/3.13.7 Darwin/24.5.0 source/arm64\u001b[0m\n\u001b[32m‚úÖ Credentials - Credenciales configuradas\u001b[0m\n\u001b[1m\nüîí VALIDANDO CONFIGURACI√ìN DE SEGURIDAD\u001b[0m\n\u001b[33m‚ö†Ô∏è .gitignore - Faltan: .terraform\u001b[0m\n\u001b[36m   üí° Agregar patrones faltantes a .gitignore\u001b[0m\n\u001b[33m‚ö†Ô∏è Hardcoded Credentials - Posibles credenciales encontradas en c√≥digo\u001b[0m\n\u001b[36m   üí° Revisar y mover credenciales a variables de entorno\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[1müìä DEPLOYMENT VALIDATION REPORT\u001b[0m\n\u001b[1m============================================================\u001b[0m\n\u001b[32m‚úÖ Validaciones exitosas: 22\u001b[0m\n\u001b[31m‚ùå Validaciones fallidas: 2\u001b[0m\n\u001b[33m‚ö†Ô∏è  Advertencias: 4\u001b[0m\n\u001b[33müìà Puntuaci√≥n de preparaci√≥n: 79%\u001b[0m\n\u001b[36müéØ Tipo de despliegue detectado: both\u001b[0m\n\u001b[36m‚è±Ô∏è  Duraci√≥n: 5s\u001b[0m\n\u001b[31m\n‚ùå PROBLEMAS CR√çTICOS QUE BLOQUEAN EL DESPLIEGUE:\u001b[0m\n\u001b[31m   ‚Ä¢ .env.production not in repo: PELIGRO: Archivo .env en repositorio\u001b[0m\n\u001b[36m     üí° Eliminar archivo .env del repositorio y agregarlo a .gitignore\u001b[0m\n\u001b[31m   ‚Ä¢ .env not in repo: PELIGRO: Archivo .env en repositorio\u001b[0m\n\u001b[36m     üí° Eliminar archivo .env del repositorio y agregarlo a .gitignore\u001b[0m\n\u001b[33m\n‚ö†Ô∏è  ADVERTENCIAS (RECOMENDADO RESOLVER):\u001b[0m\n\u001b[33m   ‚Ä¢ terraform.tfvars.example: Algunas variables pueden faltar\u001b[0m\n\u001b[36m     üí° Verificar que todas las variables de terraform.tfvars.example est√©n definidas\u001b[0m\n\u001b[33m   ‚Ä¢ Required Services: 2/4 servicios requeridos disponibles\u001b[0m\n\u001b[36m     üí° Verificar configuraci√≥n de servicios en docker-compose.yml\u001b[0m\n\u001b[33m   ‚Ä¢ .gitignore: Faltan: .terraform\u001b[0m\n\u001b[36m     üí° Agregar patrones faltantes a .gitignore\u001b[0m\n\u001b[33m   ‚Ä¢ Hardcoded Credentials: Posibles credenciales encontradas en c√≥digo\u001b[0m\n\u001b[36m     üí° Revisar y mover credenciales a variables de entorno\u001b[0m\n\u001b[1m\nüöÄ RECOMENDACIONES DE DESPLIEGUE:\u001b[0m\n\u001b[33m   ‚ö†Ô∏è  Sistema parcialmente listo - resolver advertencias\u001b[0m\n\u001b[1m\n============================================================\u001b[0m\n\u001b[36müìÑ Reporte detallado guardado en: /Users/danielmoreno/Desktop/localstack dev/DynamicTest/WaveResearchFront/deployment-validation-report.json\u001b[0m\n\u001b[31m\nüí• PROBLEMAS CR√çTICOS IMPIDEN EL DESPLIEGUE\u001b[0m\n"
    }
  ],
  "options": {
    "skipBuild": false,
    "skipIntegration": false,
    "skipDeployment": false,
    "verbose": false,
    "outputFile": null,
    "continueOnFailure": true
  }
}